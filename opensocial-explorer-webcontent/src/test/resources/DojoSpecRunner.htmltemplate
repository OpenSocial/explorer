<!DOCTYPE html>
<!--
This was pretty much taken from the ReuireJS template included in the Jasmine Maven Plugin.
You can find the original here (notice the version) https://github.com/searls/jasmine-maven-plugin/blob/jasmine-maven-plugin-1.3.1.0/src/main/resources/jasmine-templates/RequireJsSpecRunner.htmltemplate.
The only change made from the original is the removal of line 45 [require.config(configuration)] which is not required when using Dojo.
-->
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=$sourceEncoding$">
  $if(autoRefresh)$
  <meta http-equiv="refresh" content="$autoRefreshInterval$">
  $endif$
  <title>Jasmine Spec Runner</title>
  $cssDependencies$
  $javascriptDependencies$
  $preloadScriptTags$
</head>
<body>
  <script type="text/javascript">
    if(window.location.href.indexOf("ManualSpecRunner.html") !== -1) {
      document.body.appendChild(document.createTextNode("Warning: opening this HTML file directly from the file system is deprecated. You should instead try running `mvn jasmine:bdd` from the command line, and then visit `http://localhost:8234` in your browser. "))
    }
    
    var specs = $specsList$;
				
    var configuration = {
      $if(customRunnerConfiguration)$
      $customRunnerConfiguration$
      $endif$
    };
    
    if (!configuration.baseUrl) {
    	configuration.baseUrl = '$sourceDir$';
    }
    
    if (!configuration.paths) {
    	configuration.paths = {};
    }
    
    if (!configuration.paths.specs) {
    	var specDir = '$specDir$';
    	if (!specDir.match(/^file/)) {
    		specDir = '/'+specDir;
    	}
    	configuration.paths.specs = specDir;
    }
		
    require(specs, function() {
      window.reporter = new jasmine.$reporter$(); jasmine.getEnv().addReporter(reporter);
      if ('$reporter$' == 'HtmlReporter') {
        jasmine.getEnv().specFilter = function(spec) {
          return window.reporter.specFilter(spec);
        };
      }
      
	  //Don't do live updates when running through HTMLUnit
      if ('$reporter$' == 'JsApiReporter'){
		jasmine.getEnv().updateInterval = Number.MAX_VALUE;
      }
      
      jasmine.getEnv().execute();
    });
  </script>
</body>
</html>